{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Footer/Footer.js"],"sourcesContent":["import React from \"react\";\nimport \"./Footer.css\";\nimport { Container } from \"react-bootstrap\";\n\nexport default function Footer() {\n  return (\n    <footer id=\"footer\">\n      <Container>\n        <div className=\"content\">\n          <div className=\"logo\">\n            <img src=\"/logo.svg\" alt=\"mood logo\" height={100} />\n          </div>\n          <p className=\"footer-text\">All Rights Reserved 2025.</p>\n        </div>\n      </Container>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;AAEe,SAAS;IACtB,qBACE,qKAAC;QAAO,IAAG;kBACT,cAAA,qKAAC,uLAAA,CAAA,YAAS;sBACR,cAAA,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BAAI,KAAI;4BAAY,KAAI;4BAAY,QAAQ;;;;;;;;;;;kCAE/C,qKAAC;wBAAE,WAAU;kCAAc;;;;;;;;;;;;;;;;;;;;;;AAKrC","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Mobile/isMobile.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useIsMobile(): boolean {\n  // lazy init so we never touch `window` during SSR\n  const [isMobile, setIsMobile] = useState<boolean>(() =>\n      typeof window !== \"undefined\" ? window.innerWidth <= 768 : false\n  );\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") return;\n\n    const checkIsMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    checkIsMobile();\n    window.addEventListener(\"resize\", checkIsMobile);\n    return () => {\n      window.removeEventListener(\"resize\", checkIsMobile);\n    };\n  }, []);\n\n  return isMobile;\n}\n\nexport default useIsMobile;\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS;IACP,kDAAkD;IAClD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW,IAC9C,6EAA2D;IAG/D,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAmC;;QAEnC,MAAM;IASR,GAAG,EAAE;IAEL,OAAO;AACT;uCAEe","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Menu/Menu.tsx"],"sourcesContent":["import React, {FC, useEffect, useState} from \"react\";\nimport \"./Menu.css\";\nimport { MenuOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport useIsMobile from \"../Mobile/isMobile\";\nimport Link from \"next/link\";\ninterface MenuProps {\n  minified: boolean;\n}\nconst Menu: FC<MenuProps> = ({ minified }) => {\n\n  const [isSticky, setIsSticky] = useState(false);\n  const [isToggle, setIsToggle] = useState(false);\n  const isMobile = useIsMobile();\n  const isMinified = minified || isMobile;\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > window.innerHeight - 50) {\n        setIsSticky(true);\n      } else {\n        setIsSticky(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  const isMenuShown = isToggle || !isMinified;\n  return (\n    <>\n      {isMinified && (\n        <div\n          className={\"toggleBtn \" + (isToggle ? \"active\" : \"\")}\n          onClick={() => setIsToggle(!isToggle)}\n        >\n          Menu {isToggle ? <CloseOutlined /> : <MenuOutlined />}\n        </div>\n      )}\n\n      <div\n        id=\"menu\"\n        className={(isSticky ? \"sticky\" : \"\") + (isMinified ? \" minified\" : \"\")}\n      >\n        {isMenuShown && (\n          <>\n            <Link href=\"/\">\n              <button className=\"btn btn-mint\">Home</button>\n            </Link>\n            <Link href=\"/landscape\">\n              <button className=\"btn btn-mint\">Landscape</button>\n            </Link>\n            <Link href=\"/interior\">\n              <button className=\"btn btn-mint\">Interior</button>\n            </Link>\n            <Link href=\"/contact\">\n              <button className=\"btn btn-mint\">Contacts</button>\n            </Link>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\nexport default Menu;"],"names":[],"mappings":";;;;AAAA;AAEA;AAAA;AACA;AACA;;;;;;;AAIA,MAAM,OAAsB,CAAC,EAAE,QAAQ,EAAE;IAEvC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,WAAW,CAAA,GAAA,gIAAA,CAAA,UAAW,AAAD;IAC3B,MAAM,aAAa,YAAY;IAC/B,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI,OAAO,OAAO,GAAG,OAAO,WAAW,GAAG,IAAI;gBAC5C,YAAY;YACd,OAAO;gBACL,YAAY;YACd;QACF;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IACL,MAAM,cAAc,YAAY,CAAC;IACjC,qBACE;;YACG,4BACC,qKAAC;gBACC,WAAW,eAAe,CAAC,WAAW,WAAW,EAAE;gBACnD,SAAS,IAAM,YAAY,CAAC;;oBAC7B;oBACO,yBAAW,qKAAC,6MAAA,CAAA,gBAAa;;;;6CAAM,qKAAC,2MAAA,CAAA,eAAY;;;;;;;;;;;0BAItD,qKAAC;gBACC,IAAG;gBACH,WAAW,CAAC,WAAW,WAAW,EAAE,IAAI,CAAC,aAAa,cAAc,EAAE;0BAErE,6BACC;;sCACE,qKAAC,qHAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,qKAAC;gCAAO,WAAU;0CAAe;;;;;;;;;;;sCAEnC,qKAAC,qHAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,qKAAC;gCAAO,WAAU;0CAAe;;;;;;;;;;;sCAEnC,qKAAC,qHAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,qKAAC;gCAAO,WAAU;0CAAe;;;;;;;;;;;sCAEnC,qKAAC,qHAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,qKAAC;gCAAO,WAAU;0CAAe;;;;;;;;;;;;;;;;;;;;AAO/C;uCACe","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Loading/Loading.js"],"sourcesContent":["import { Spin } from \"antd\";\nimport \"./Loading.css\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nexport const Loading = () => {\n  return (\n    <div className=\"loading\">\n      <Spin indicator={<LoadingOutlined style={{ fontSize: 48 }} spin />} />\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;AAEO,MAAM,UAAU;IACrB,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC,uKAAA,CAAA,OAAI;YAAC,yBAAW,qKAAC,iNAAA,CAAA,kBAAe;gBAAC,OAAO;oBAAE,UAAU;gBAAG;gBAAG,IAAI;;;;;;;;;;;;;;;;AAGrE","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/Pages/Project/Project.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Project.css'\nimport Footer from '@/components/Footer/Footer'\nimport Menu from '@/components/Menu/Menu'\nimport { Loading } from '@/components/Loading/Loading'\nimport { Carousel, ConfigProvider } from 'antd'\nimport Link from 'next/link'\nimport { useParams, useRouter } from 'next/navigation'\n\ninterface ImageSize {\n    height: number\n    url: string\n}\n\ninterface ComponentItem {\n    imageSizes: {\n        allAvailable: ImageSize[]\n    }\n}\n\ninterface Module {\n    text?: string\n    components?: ComponentItem[]\n}\n\ninterface Tag {\n    title: string\n}\n\ninterface ProjectType {\n    slug: string\n    name: string\n    allModules?: Module[]\n    tags?: Tag[]\n    covers: {\n        size_original_webp: {\n            url: string\n        }\n    }\n}\n\nconst Project: React.FC = () => {\n    const params = useParams()\n    const slug = params?.id\n    const router = useRouter()\n    const [isLoading, setLoading] = useState<boolean>(true)\n    const [project, setProject] = useState<ProjectType | null>(null)\n    const [projects, setProjects] = useState<ProjectType[]>([])\n\n    // Whenever slug changes, start loading\n    useEffect(() => {\n        setLoading(true)\n    }, [slug])\n\n    // Fetch data\n    useEffect(() => {\n        fetch('/api/behance/projects')\n            .then((res) => res.json() as Promise<ProjectType[]>)\n            .then((data) => {\n                const found = data.find((p) => p.slug === slug)\n                if (!found) {\n                    router.push('/')\n                    return\n                }\n                setProject(found)\n                setProjects(data.filter((p) => p.slug !== slug).slice(0, 4))\n            })\n            .catch(() => {\n                router.push('/')\n            })\n            .finally(() => setLoading(false))\n    }, [slug, router])\n\n    if (isLoading || !project) return <Loading />\n\n    // Extract text modules\n    const textList = project.allModules?.filter((m) => m.text) as Module[]\n\n    // Build array of image URLs\n    const images =\n        project.allModules\n            ?.filter((m) => m.components)\n            .flatMap((m) =>\n                m.components!.flatMap((c) => {\n                    // choose first image taller than viewport, or last one otherwise\n                    const match = typeof window !== 'undefined'\n                        ? c.imageSizes.allAvailable.find((img) => img.height > window.innerHeight)\n                        : null\n                    return match?.url ?? c.imageSizes.allAvailable.slice(-1)[0].url\n                })\n            ) ?? []\n\n    // Extract tag titles\n    const tagTitles = project.tags?.map((t) => t.title) ?? []\n\n    return (\n        <ConfigProvider\n            theme={{\n                components: {\n                    Carousel: {\n                        arrowSize: 50,\n                    },\n                },\n            }}\n        >\n            <main id=\"home\">\n                <Menu minified />\n                <div className=\"project-container\">\n                    <div className=\"project-images\">\n                        <Carousel arrows>\n                            {images.map((url) => (\n                                <div key={url}>\n                                    <img alt=\"MOOD studio project\" src={url} />\n                                </div>\n                            ))}\n                        </Carousel>\n                    </div>\n                    <div className=\"project-description\">\n                        {textList.map((mod, i) => (\n                            <div\n                                key={i}\n                                dangerouslySetInnerHTML={{ __html: mod.text || '' }}\n                            />\n                        ))}\n                        <div className=\"tag-container\">\n                            {tagTitles.map((tag, i) => (\n                                <div key={i} className=\"tag\">\n                                    {tag}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"projects-container\">\n                            {projects.map((p) => (\n                                <Link\n                                    key={p.slug}\n                                    href={`/project/${p.slug}`}\n                                    className=\"project-overview\"\n                                    style={{\n                                        backgroundImage: `url(${p.covers.size_original_webp.url})`,\n                                    }}\n                                >\n                                    <div>{p.name}</div>\n                                </Link>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </main>\n        </ConfigProvider>\n    )\n}\n\nexport default Project\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;AAkCA,MAAM,UAAoB;IACtB,MAAM,SAAS,CAAA,GAAA,2HAAA,CAAA,YAAS,AAAD;IACvB,MAAM,OAAO,QAAQ;IACrB,MAAM,SAAS,CAAA,GAAA,2HAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAsB;IAC3D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAE1D,uCAAuC;IACvC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACN,WAAW;IACf,GAAG;QAAC;KAAK;IAET,aAAa;IACb,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,yBACD,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC;YACH,MAAM,QAAQ,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;YAC1C,IAAI,CAAC,OAAO;gBACR,OAAO,IAAI,CAAC;gBACZ;YACJ;YACA,WAAW;YACX,YAAY,KAAK,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,MAAM,KAAK,CAAC,GAAG;QAC7D,GACC,KAAK,CAAC;YACH,OAAO,IAAI,CAAC;QAChB,GACC,OAAO,CAAC,IAAM,WAAW;IAClC,GAAG;QAAC;QAAM;KAAO;IAEjB,IAAI,aAAa,CAAC,SAAS,qBAAO,qKAAC,gIAAA,CAAA,UAAO;;;;;IAE1C,uBAAuB;IACvB,MAAM,WAAW,QAAQ,UAAU,EAAE,OAAO,CAAC,IAAM,EAAE,IAAI;IAEzD,4BAA4B;IAC5B,MAAM,SACF,QAAQ,UAAU,EACZ,OAAO,CAAC,IAAM,EAAE,UAAU,EAC3B,QAAQ,CAAC,IACN,EAAE,UAAU,CAAE,OAAO,CAAC,CAAC;YACnB,iEAAiE;YACjE,MAAM,QAAQ,6EAER;YACN,OAAO,OAAO,OAAO,EAAE,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG;QACnE,OACC,EAAE;IAEf,qBAAqB;IACrB,MAAM,YAAY,QAAQ,IAAI,EAAE,IAAI,CAAC,IAAM,EAAE,KAAK,KAAK,EAAE;IAEzD,qBACI,qKAAC,+MAAA,CAAA,iBAAc;QACX,OAAO;YACH,YAAY;gBACR,UAAU;oBACN,WAAW;gBACf;YACJ;QACJ;kBAEA,cAAA,qKAAC;YAAK,IAAG;;8BACL,qKAAC,2HAAA,CAAA,UAAI;oBAAC,QAAQ;;;;;;8BACd,qKAAC;oBAAI,WAAU;;sCACX,qKAAC;4BAAI,WAAU;sCACX,cAAA,qKAAC,+KAAA,CAAA,WAAQ;gCAAC,MAAM;0CACX,OAAO,GAAG,CAAC,CAAC,oBACT,qKAAC;kDACG,cAAA,qKAAC;4CAAI,KAAI;4CAAsB,KAAK;;;;;;uCAD9B;;;;;;;;;;;;;;;sCAMtB,qKAAC;4BAAI,WAAU;;gCACV,SAAS,GAAG,CAAC,CAAC,KAAK,kBAChB,qKAAC;wCAEG,yBAAyB;4CAAE,QAAQ,IAAI,IAAI,IAAI;wCAAG;uCAD7C;;;;;8CAIb,qKAAC;oCAAI,WAAU;8CACV,UAAU,GAAG,CAAC,CAAC,KAAK,kBACjB,qKAAC;4CAAY,WAAU;sDAClB;2CADK;;;;;;;;;;8CAKlB,qKAAC;oCAAI,WAAU;8CACV,SAAS,GAAG,CAAC,CAAC,kBACX,qKAAC,qHAAA,CAAA,UAAI;4CAED,MAAM,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE;4CAC1B,WAAU;4CACV,OAAO;gDACH,iBAAiB,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC;4CAC9D;sDAEA,cAAA,qKAAC;0DAAK,EAAE,IAAI;;;;;;2CAPP,EAAE,IAAI;;;;;;;;;;;;;;;;;;;;;;8BAa/B,qKAAC,8HAAA,CAAA,UAAM;;;;;;;;;;;;;;;;AAIvB;uCAEe","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/pages/project/%5Bid%5D.tsx"],"sourcesContent":["import Project from \"@/Pages/Project/Project\";\n\nconst ProjectPage = () => {\n    return <Project />\n}\nexport default ProjectPage;"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,cAAc;IAChB,qBAAO,qKAAC,4HAAA,CAAA,UAAO;;;;;AACnB;uCACe","debugId":null}}]
}