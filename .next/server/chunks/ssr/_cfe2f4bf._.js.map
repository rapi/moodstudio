{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Footer/Footer.js"],"sourcesContent":["import React from \"react\";\nimport \"./Footer.css\";\nimport { Container } from \"react-bootstrap\";\n\nexport default function Footer() {\n  return (\n    <footer id=\"footer\">\n      <Container>\n        <div className=\"content\">\n          <div className=\"logo\">\n            <img src=\"/logo.svg\" alt=\"mood logo\" height={100} />\n          </div>\n          <p className=\"footer-text\">All Rights Reserved 2025.</p>\n        </div>\n      </Container>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;AAEe,SAAS;IACtB,qBACE,qKAAC;QAAO,IAAG;kBACT,cAAA,qKAAC,uLAAA,CAAA,YAAS;sBACR,cAAA,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BAAI,KAAI;4BAAY,KAAI;4BAAY,QAAQ;;;;;;;;;;;kCAE/C,qKAAC;wBAAE,WAAU;kCAAc;;;;;;;;;;;;;;;;;;;;;;AAKrC","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Card/CardContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\nexport default function CardContainer({ children }) {\n  return <div className=\"card-container\">{children}</div>;\n}\n"],"names":[],"mappings":";;;;;;AAEe,SAAS,cAAc,EAAE,QAAQ,EAAE;IAChD,qBAAO,qKAAC;QAAI,WAAU;kBAAkB;;;;;;AAC1C","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Card/Card.tsx"],"sourcesContent":["import React, { useState, FC, CSSProperties } from \"react\";\nimport \"./Card.css\";\nimport Link from \"next/link\";\n\ninterface CardProps {\n    image: string;\n    title: string;\n    link: string;\n}\n\nconst Card: FC<CardProps> = ({ image, title, link }) => {\n    const [isHovered, setIsHovered] = useState<boolean>(false);\n\n    const overlayOpacity = isHovered ? \"0\" : \"0.2\";\n    const style: CSSProperties = {\n        backgroundImage: `linear-gradient(\n      rgba(0, 0, 0, ${overlayOpacity}),\n      rgba(0, 0, 0, ${overlayOpacity})\n    ), url(${image})`,\n    };\n\n    return (\n        <Link\n            href={link}\n            className=\"card\"\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n            style={style}\n            target={link.startsWith(\"http\") ? \"_blank\" : \"_self\"}\n        >\n            <div className=\"card-title\">{title}</div>\n        </Link>\n    );\n};\n\nexport default Card;\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;AAQA,MAAM,OAAsB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW;IAEpD,MAAM,iBAAiB,YAAY,MAAM;IACzC,MAAM,QAAuB;QACzB,iBAAiB,CAAC;oBACN,EAAE,eAAe;oBACjB,EAAE,eAAe;WAC1B,EAAE,MAAM,CAAC,CAAC;IACjB;IAEA,qBACI,qKAAC,qHAAA,CAAA,UAAI;QACD,MAAM;QACN,WAAU;QACV,cAAc,IAAM,aAAa;QACjC,cAAc,IAAM,aAAa;QACjC,OAAO;QACP,QAAQ,KAAK,UAAU,CAAC,UAAU,WAAW;kBAE7C,cAAA,qKAAC;YAAI,WAAU;sBAAc;;;;;;;;;;;AAGzC;uCAEe","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Loading/Loading.js"],"sourcesContent":["import { Spin } from \"antd\";\nimport \"./Loading.css\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nexport const Loading = () => {\n  return (\n    <div className=\"loading\">\n      <Spin indicator={<LoadingOutlined style={{ fontSize: 48 }} spin />} />\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;AAEO,MAAM,UAAU;IACrB,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC,uKAAA,CAAA,OAAI;YAAC,yBAAW,qKAAC,iNAAA,CAAA,kBAAe;gBAAC,OAAO;oBAAE,UAAU;gBAAG;gBAAG,IAAI;;;;;;;;;;;;;;;;AAGrE","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Overview/Overview.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport \"./Overview.css\";\nimport CardContainer from \"../Card/CardContainer\";\nimport Card from \"../Card/Card\";\nimport { Loading } from \"../Loading/Loading\";\n\ninterface Field {\n    label: string;\n}\n\ninterface Covers {\n    size_original_webp: {\n        url: string;\n    };\n}\n\ninterface Project {\n    fields: Field[];\n    covers: Covers;\n    name: string;\n    slug: string;\n}\n\ninterface OverviewProps {\n    filter?: string;\n}\n\nconst Overview: FC<OverviewProps> = ({ filter }) => {\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [projects, setProjects] = useState<Project[]>([]);\n\n    useEffect(() => {\n        const fetchProjects = async () => {\n            try {\n                const res = await fetch(\"/api/behance/projects\");\n                const data: Project[] = await res.json();\n                const filtered = filter\n                    ? data.filter(project =>\n                        project.fields.some(field => field.label.includes(filter))\n                    )\n                    : data;\n                setProjects(filtered);\n            } catch (error) {\n                console.error(\"Failed to fetch projects\", error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchProjects();\n    }, [filter]);\n\n    if (isLoading) {\n        return <Loading />;\n    }\n\n    return (\n        <div className=\"overview\">\n            <CardContainer>\n                {projects.map(project => (\n                    <Card\n                        key={project.slug}\n                        image={project.covers.size_original_webp.url}\n                        title={project.name}\n                        link={`/project/${project.slug}`}\n                    />\n                ))}\n            </CardContainer>\n        </div>\n    );\n};\n\nexport default Overview;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;;;;;;;AAuBA,MAAM,WAA8B,CAAC,EAAE,MAAM,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW;IACpD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAEtD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,gBAAgB;YAClB,IAAI;gBACA,MAAM,MAAM,MAAM,MAAM;gBACxB,MAAM,OAAkB,MAAM,IAAI,IAAI;gBACtC,MAAM,WAAW,SACX,KAAK,MAAM,CAAC,CAAA,UACV,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAA,QAAS,MAAM,KAAK,CAAC,QAAQ,CAAC,YAEpD;gBACN,YAAY;YAChB,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,4BAA4B;YAC9C,SAAU;gBACN,aAAa;YACjB;QACJ;QAEA;IACJ,GAAG;QAAC;KAAO;IAEX,IAAI,WAAW;QACX,qBAAO,qKAAC,gIAAA,CAAA,UAAO;;;;;IACnB;IAEA,qBACI,qKAAC;QAAI,WAAU;kBACX,cAAA,qKAAC,oIAAA,CAAA,UAAa;sBACT,SAAS,GAAG,CAAC,CAAA,wBACV,qKAAC,2HAAA,CAAA,UAAI;oBAED,OAAO,QAAQ,MAAM,CAAC,kBAAkB,CAAC,GAAG;oBAC5C,OAAO,QAAQ,IAAI;oBACnB,MAAM,CAAC,SAAS,EAAE,QAAQ,IAAI,EAAE;mBAH3B,QAAQ,IAAI;;;;;;;;;;;;;;;AASzC;uCAEe","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Mobile/isMobile.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useIsMobile(): boolean {\n  // lazy init so we never touch `window` during SSR\n  const [isMobile, setIsMobile] = useState<boolean>(() =>\n      typeof window !== \"undefined\" ? window.innerWidth <= 768 : false\n  );\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") return;\n\n    const checkIsMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    checkIsMobile();\n    window.addEventListener(\"resize\", checkIsMobile);\n    return () => {\n      window.removeEventListener(\"resize\", checkIsMobile);\n    };\n  }, []);\n\n  return isMobile;\n}\n\nexport default useIsMobile;\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS;IACP,kDAAkD;IAClD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW,IAC9C,6EAA2D;IAG/D,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAmC;;QAEnC,MAAM;IASR,GAAG,EAAE;IAEL,OAAO;AACT;uCAEe","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/components/Menu/Menu.tsx"],"sourcesContent":["import React, {FC, useEffect, useState} from \"react\";\nimport \"./Menu.css\";\nimport { MenuOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport useIsMobile from \"../Mobile/isMobile\";\nimport Link from \"next/link\";\ninterface MenuProps {\n  minified: boolean;\n}\nconst Menu: FC<MenuProps> = ({ minified }) => {\n\n  const [isSticky, setIsSticky] = useState(false);\n  const [isToggle, setIsToggle] = useState(false);\n  const isMobile = useIsMobile();\n  const isMinified = minified || isMobile;\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > window.innerHeight - 50) {\n        setIsSticky(true);\n      } else {\n        setIsSticky(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  const isMenuShown = isToggle || !isMinified;\n  return (\n    <>\n      {isMinified && (\n        <div\n          className={\"toggleBtn \" + (isToggle ? \"active\" : \"\")}\n          onClick={() => setIsToggle(!isToggle)}\n        >\n          Menu {isToggle ? <CloseOutlined /> : <MenuOutlined />}\n        </div>\n      )}\n\n      <div\n        id=\"menu\"\n        className={(isSticky ? \"sticky\" : \"\") + (isMinified ? \" minified\" : \"\")}\n      >\n        {isMenuShown && (\n          <>\n            <Link href=\"/\">\n              <button className=\"btn btn-mint\">Home</button>\n            </Link>\n            <Link href=\"/landscape\">\n              <button className=\"btn btn-mint\">Landscape</button>\n            </Link>\n            <Link href=\"/interior\">\n              <button className=\"btn btn-mint\">Interior</button>\n            </Link>\n            <Link href=\"/contact\">\n              <button className=\"btn btn-mint\">Contacts</button>\n            </Link>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\nexport default Menu;"],"names":[],"mappings":";;;;AAAA;AAEA;AAAA;AACA;AACA;;;;;;;AAIA,MAAM,OAAsB,CAAC,EAAE,QAAQ,EAAE;IAEvC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,WAAW,CAAA,GAAA,gIAAA,CAAA,UAAW,AAAD;IAC3B,MAAM,aAAa,YAAY;IAC/B,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI,OAAO,OAAO,GAAG,OAAO,WAAW,GAAG,IAAI;gBAC5C,YAAY;YACd,OAAO;gBACL,YAAY;YACd;QACF;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IACL,MAAM,cAAc,YAAY,CAAC;IACjC,qBACE;;YACG,4BACC,qKAAC;gBACC,WAAW,eAAe,CAAC,WAAW,WAAW,EAAE;gBACnD,SAAS,IAAM,YAAY,CAAC;;oBAC7B;oBACO,yBAAW,qKAAC,6MAAA,CAAA,gBAAa;;;;6CAAM,qKAAC,2MAAA,CAAA,eAAY;;;;;;;;;;;0BAItD,qKAAC;gBACC,IAAG;gBACH,WAAW,CAAC,WAAW,WAAW,EAAE,IAAI,CAAC,aAAa,cAAc,EAAE;0BAErE,6BACC;;sCACE,qKAAC,qHAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,qKAAC;gCAAO,WAAU;0CAAe;;;;;;;;;;;sCAEnC,qKAAC,qHAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,qKAAC;gCAAO,WAAU;0CAAe;;;;;;;;;;;sCAEnC,qKAAC,qHAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,qKAAC;gCAAO,WAAU;0CAAe;;;;;;;;;;;sCAEnC,qKAAC,qHAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,qKAAC;gCAAO,WAAU;0CAAe;;;;;;;;;;;;;;;;;;;;AAO/C;uCACe","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/src/Pages/Projects/Projects.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport \"./Projects.css\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Overview from \"../../components/Overview/Overview\";\nimport Menu from \"../../components/Menu/Menu\";\n\ninterface ProjectsProps {\n    filter: string;\n}\n\nconst Projects: FC<ProjectsProps> = ({ filter }) => {\n    return (\n        <>\n            <main id=\"home\">\n                <Menu minified />\n                <Overview filter={filter} />\n                <Footer />\n            </main>\n        </>\n    );\n};\n\nexport default Projects;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;;;;AAMA,MAAM,WAA8B,CAAC,EAAE,MAAM,EAAE;IAC3C,qBACI;kBACI,cAAA,qKAAC;YAAK,IAAG;;8BACL,qKAAC,2HAAA,CAAA,UAAI;oBAAC,QAAQ;;;;;;8BACd,qKAAC,mIAAA,CAAA,UAAQ;oBAAC,QAAQ;;;;;;8BAClB,qKAAC,8HAAA,CAAA,UAAM;;;;;;;;;;;;AAIvB;uCAEe","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///Users/vasile-grinciuc/Work/moodstudio/pages/interior.tsx"],"sourcesContent":["import Projects from \"@/Pages/Projects/Projects\";\n\nexport default function Landscape() {\n    return <Projects filter={\"Interior\"} />\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACpB,qBAAO,qKAAC,8HAAA,CAAA,UAAQ;QAAC,QAAQ;;;;;;AAC7B","debugId":null}}]
}